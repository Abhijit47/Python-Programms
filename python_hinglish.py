# -*- coding: utf-8 -*-
"""python_hinglish.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14dczdsCW5uYjoZBEGtC_BCD9VZLgLnoQ
"""

print("Hello Wassem")

print("Muskaan")

"""Hey I love you, you are Future Developer """

# Objects & Data Structures

# Solid = dabba 
# Liquid = bottle 
# Gas = cylinder

# Whole Number  = integer = int
# Decimal Number = float 
# Word = String

a = 10

type(a)

b = 5.6

type(b)

c = 'Ishart Ara'

type(c)

# Variable Assignment ?

# variable Name ?

abc = 100

keshav_sharam = 1000

keshav_sharam

2E4 robert = 99

2E4robert = 99

E4robert = 99

# List , Dict, Tuple, Set  = Secondary data types

# List

"""

1.   Milk
2.   Bread 
3.   Chocolates 
4.   Monster drinks 


"""

lst = ['milk','bread','chocolate','monster']

lst

lst[0]

lst[2]

lst[3]

lst[-1]

lst_names = ['Shubham','Akku','Sai durga', 'Editz','GamerAmit',' Anmol Pinto']

lst_names

# dict

# Sai Durga details

sai_durga_details = [ 'sai durag', 'said@lu.in', '9662454426','mumbai']

Anmol = [ "9662454424", "Pune", 'anmol', 'anmol@lu.in']

sai_durga_details

Anmol

sai_durga_details[0]

Anmol[0]

#dict

anu = {'key1':1,'key2':2,'key3':3}

anu

Om = {'name':'Om','email':'om@lu.in',"mobile":"9662454420","city":"mumbai"}

Bhargav = {"mobile":"9662454420",'name':'Bhargav',"city":"pune", 'email':'bhargav@lu.in'}

Om['email']

Bhargav['email']

# Tuple , Set, Bool

tup = ("sai","kiran","loves","you","all")

tup

lst_names

lst_names[0] = "Anshu"

lst_names

tup[0] = "LetsUpgrade"

# set

st = {1,1,1,1,1,2,3,4,4,4,5}

st

st1 = {4,4,4,3,2,2,2,7,7,7,1,1,1,1}

st1

# Boolean

abc = False

type(abc)

# Operators, IF else, For Loop, While loop

# comparions operators

#1. equal to 
#2. not equal to 
#3. greater than 
#4. less than
#5. greater than equal to 
#6. less than equal to

a = 10

b = 20

a == b

a != b

a < b

a > b

a <= b

a >= b

# if elif and else

live_count = 170 

if live_count >= 200:
  print("sai will teach for 6 day ")
else:
  print("sai will teach for 5 days only ")

marks = 91 

if marks >= 90:
  print("A")
elif marks >= 80:
  print("B")
else:
  print('C')

# Day 3 Assignment 


#Write a Python program to check if a number is Odd or even

# Loops

# When u want to repeat something again and again , 
# that time we use loops

# For loop and While Loop

# for Loop

lst_names

for x in lst_names:
  print('Hey,',x)
  print("I want to you compelte this program")
else:
  print("")
  print("Loop ktm ho gaya hai bhaisahab, ghar javaooo")

# while loop

maria = 20 

while maria < 60:
  print("Hey you can work, your age now is ", maria )
  maria = maria + 1 

else:
  print("")
  print("Bhai bht kamm kar liyaa abhi aramm karoo !! ")

# functions

name = "Ishart"
print('Hey',name)
print("hello",name)
print("Hola",name)
print("Namsate", name)
name1 = "Vinodh"
print('Hey',name1)
print("hello",name1)
print("Hola",name1)
print("Namsate", name1)

def nancy(name):
  print('Hey',name)
  print("hello",name)
  print("Hola",name)
  print("Namsate", name)

nancy("ajay")

namaste("Gru")

namaste("Aditya")

# Def a function to find out if a number is 
# Odd or even

def oddOrEven(num):
  #logic = when you divide a even num with 2 it should give 0 as reminder 
  if num%2 == 0:
    print("Its a even number")
  else:
    print("Its a odd number")

oddOrEven(3)

oddOrEven(1775)

oddOrEven(24)

# Write a program which has a function to find 
# out a number is prime number or not

xyz = oddOrEven(78)

xyz

type(xyz)

def caculator(operator, value1,value2):
  if operator == '+':
    return value1 + value2
  elif operator == "-":
    return value1 - value2
  elif operator == "*":
    return value1 * value2
  elif operator == "/":
    return value1 / value2
  else:
    print("Define only +, -, *, / as operator")

result1 = caculator('*',98,99)

result1

type(result1)

# *Args and **Kwargs

print("hey", "hello", "sudarsan", " Yashraj")

def sumOfAll (*capt):
  temp = 0 
  for x in capt:
    temp = temp + x
  return temp

sumOfAll(1,2,3,4,5,6,7,5,6,7,9)

def printAll(**kwargs):

  # for x in kwargs.values():
  #   print(x)
  for x in kwargs.keys():
    print(x, ' = ', kwargs[x])

printAll(a=10,b=50,c=90,d = 100,e = 1000)

#X & O game

# 1. Delcare array of 9 with '_'
# 2. Make nice format to print it 
# 3. write winning conditions 
# 4. specify turns 
# 5. take input in the specific position
# 6. see if someone won & delcare winner 
# 7. See if more turns left yes or na 
# 8. repeat the game if turns are over

"""

1.   Delcare a list with 9 Blocks of empty space 
2.   Print the board on screen 
3.   Select who will go first   
4.   Take input from user A or user B with Specific Position  
5.   Check if the pos is empty then only take it as a vaild input, else ask again 
6.  after the input is placed, check is some player has won, its a draw 
7. ask if the user want to play again 
8. Enter the score for all the matches 


"""

def emptyList_XO():
  tmp_lst = []
  for i in range(9):
    tmp_lst.append(' ')
  return tmp_lst

XO_list = emptyList_XO()

def printBoard(xoList):
  print(xoList[0], "|",xoList[1], "|", xoList[2])
  print("----------")
  print(xoList[3], "|",xoList[4], "|", xoList[5])
  print("----------")
  print(xoList[6], "|",xoList[7], "|", xoList[8])

printBoard(XO_list)

import random 
def whoWillGoFirst():
  player = random.randint(0,1)
  if player == 0:
    print('player A | O will go first')
  else:
    print('player B | X will go first')
  return player

def takeInput(player,xoList):
  print("Hey player, ",player )
  flag = 0 
  while flag ==0:
    pos = int(input("Enter the position in between [ 0 to 8] - "))
    if pos>= 0 and pos <= 8:
      if xoList[pos] == ' ':
        print("valid input")
        if player == 0:
          xoList[pos] = 'O'
        else:
          xoList[pos] = 'X'
        return xoList 
        flag = 1
      else:
        print("please enter again, its occupied")
        flag = 0 
    else:
      print("please give valid input again ")
      flag = 0

XO_list = takeInput(1,XO_list)

# if return is 0 then player A is winner 
# if return is 1 then player B is winner 
# if return is 2 then its a draw

def checkWin(xolist):

  flag = 0

  for i in range(9):
    if xolist[i] == ' ':
      flag = 1
  
  if (xolist[0] =='O' and xolist[1] == 'O'  and xolist[2] == 'O') or (xolist[3] =='O' and xolist[4] == 'O'  and xolist[5] == 'O')  or (xolist[6] =='O' and xolist[7] == 'O'  and xolist[8] == 'O') or (xolist[0] =='O' and xolist[3] == 'O'  and xolist[6] == 'O') or (xolist[1] =='O' and xolist[4] == 'O'  and xolist[7] == 'O')  or (xolist[2] =='O' and xolist[5] == 'O'  and xolist[8] == 'O') or (xolist[0] =='O' and xolist[4] == 'O'  and xolist[8] == 'O') or (xolist[6] =='O' and xolist[4] == 'O'  and xolist[2] == 'O'): 
    print('Player A is winner ')
    return 0
  elif (xolist[0] =='X' and xolist[1] == 'X'  and xolist[2] == 'X') or (xolist[3] =='X' and xolist[4] == 'X'  and xolist[5] == 'X')  or (xolist[6] =='X' and xolist[7] == 'X'  and xolist[8] == 'X') or (xolist[0] =='X' and xolist[3] == 'X'  and xolist[6] == 'X') or (xolist[1] =='X' and xolist[4] == 'X'  and xolist[7] == 'X') or (xolist[2] =='X' and xolist[5] == 'X'  and xolist[8] == 'X') or (xolist[0] =='X' and xolist[4] == 'X'  and xolist[8] == 'X') or (xolist[6] =='X' and xolist[4] == 'X'  and xolist[2] == 'X'): 
    print('Player B is winner ')
    return 1 
  elif flag == 0:
    return 2
  else:
    return -1

printBoard(XO_list)

checkWin(XO_list)

tmp = [0,1,2,3,4,5,6,7,8]
printBoard(tmp)

XO_list = emptyList_XO()
printBoard(XO_list)
play = whoWillGoFirst()
ScoreA = 0 
ScoreB = 0 

gameStatus = 0
chance = 0 

while gameStatus == 0:
  if play == 0:
    XO_list = takeInput(0,XO_list)
    printBoard(XO_list)
    winStat = checkWin(XO_list)
    play = 1
  else:
    XO_list = takeInput(1,XO_list)
    printBoard(XO_list)
    winStat = checkWin(XO_list)
    play = 0
  if winStat == 0 or winStat == 1 or winStat == 2:
    gameStatus = 1
    print('win - ', winStat)
  else:
    gamestatus = 0

